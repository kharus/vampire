s/(\s)SharedSet</\1Lib::SharedSet</g
s/(\s)SingleParamEvent</\1Lib::SingleParamEvent</g
s/(\s)ZIArray</\1Lib::ZIArray</g
s/(\s)SkipList</\1Lib::SkipList</g
s/(\s)Comparison(\s)/\1Lib::Comparison\2/g
s/(\s)ScopedPtr</\1Lib::ScopedPtr</g
s/(\s)MaybeBool(\s)/\1Lib::MaybeBool\2/g
s/(\s)Coproduct</\1Lib::Coproduct</g
s/(\s)DefaultHash::/\1Lib::DefaultHash::/g
s/(\s)BitUtils::/\1Lib::BitUtils::/g
s/(\s)Recycled</\1Lib::Recycled</g
s/<Stack</<Lib::Stack</g
s/(\s)HashUtils::/\1Lib::HashUtils::/g
s/(\s)Vector</\1Lib::Vector</g
s/(\s)Set</\1Lib::Set</g
s/(\s)Array</\1Lib::Array</g
s/\(Stack</\(Lib::Stack</g
s/(\s)Int::/\1Lib::Int::/g
s/(\s|\()ValueNotFoundException/\1Lib::ValueNotFoundException/g
s/(\s)SmartPtr</\1Lib::SmartPtr</g
s/\(DHSet</\(Lib::DHSet</g
s/(\s)arrayIter\(/\1Lib::arrayIter\(/g
s/(\s)Deque</\1Lib::Deque</g
s/(\s)IteratorCore</\1Lib::IteratorCore</g
s/([^:])getSingletonIterator\(/\1Lib::getSingletonIterator\(/g
s/([^:])getRangeIterator</\1Lib::getRangeIterator</g
s/\(Comparison(\s)/\(Lib::Comparison\1/g
s/(^|([^[:alnum:]^:]))IterTraits</\2Lib::IterTraits</g
s/(^|([^[:alnum:]^:]))Option</\1Lib::Option</g
s/(^|([^[:alnum:]^:]))Perfect</\1Lib::Perfect</g
s/(^|([^[:alnum:]^:]))none</\1Lib::none</g
s/(^|([^[:alnum:]^:]))Stack</\1Lib::Stack</g
s/(^|([^[:alnum:]^:]))DArray</\1Lib::DArray</g
s/(^|([^[:alnum:]^:]))env\.signature/\1Lib::env\.signature/g
s/(^|([^[:alnum:]^:]))ArrayMap</\1Lib::ArrayMap</g
s/(^|([^[:alnum:]^:]))Recycled</\1Lib::Recycled</g
s/public ThrowableBase/public Lib::ThrowableBase/g
s/(^|([^[:alnum:]^:]))Map</\1Lib::Map</g
s/(^|([^[:alnum:]^:]))BiMap</\1Lib::BiMap</g
s/(^|([^[:alnum:]^:]))VirtualIterator</\1Lib::VirtualIterator</g
s/(^|([^[:alnum:]^:]))env\.options/\1Lib::env\.options/g
s/(^|([^[:alnum:]^:]))DHMultiset</\1Lib::DHMultiset</g
s/(^|([^[:alnum:]^:]))env\.setMainProblem/\1Lib::env\.setMainProblem/g
s/(^|([^[:alnum:]^:]))env\.colorUsed/\1Lib::env\.colorUsed/g
s/(^|([^[:alnum:]^:]))DHSet</\1Lib::DHSet</g
s/(^|([^[:alnum:]^:]))DHMap</\1Lib::DHMap</g
s/(^|([^[:alnum:]^:]))Slice</\1Lib::Slice</g
s/(^|([^[:alnum:]^:]))List</\1Lib::List</g